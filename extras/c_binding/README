C bindings for the DELAUNAYSPARSE Fortran package.


REQUIREMENTS:

  A Fortran compiler that supports BIND(C).

USAGE:

  Use the C bindings in delsparse_bind_c.f90 to call DELAUNAYSPARSE from
  inside a C/C++ program.

  Because C does not support optional arguments, there are 4 variations of
  DELAUNAYSPARSE{S|P}:
   * c_delaunaysparse{s|p} accepts none of the optional arguments;
   * c_delaunaysparse{s|p}_interp accepts an integer ir for specifying the
     dimension of the response variables, plus the two variables needed
     for computing the value of the interpolant, interp_in and interp_out;
   * c_delaunaysparse{s|p}_opts accepts all of the optional arguments
     EXCEPT interp_in and interp_out;
   * c_delaunaysparse{s|p}_interp_opts accepts all of the optional arguments,
     plus the response dimension ir, which cannot be inferred as it is by
     the Fortran subroutines.

  When using the 4 subroutines above, keep in mind the following:
   * C passes by copy and Fortran passes by reference. Therefore, any non-array
     type variable must be manually passed by address (i.e., by using the `&`
     character);
   * C matrices are stored in row major ordering, while Fortran stores in
     column major ordering. Therefore, your data may need to be transposed
     before calling any of the above subroutines;
   * In C, a double-indexed array is treated as an array of pointers, whereas
     Fortran expects a contiguous chunk of memory. Often, it is better to
     allocate a one-dimensional array and manually index it, then pass this
     "flat" array to the Fortran subroutine.

  Usage examples are provided in the sample file, test_install.c.

CONTRIBUTORS:

  Tyler Chang, tchang@anl.gov

